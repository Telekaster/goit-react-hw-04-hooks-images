{"version":3,"sources":["services/api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["baseUrl","apiKey","useRequest","value","page","a","axios","get","then","response","images","data","hits","loaded","result","Searchbar","onChange","onClick","className","type","autocomplete","autofocus","placeholder","ImageGalleryItem","item","id","src","webformatURL","alt","ImageGallery","map","Button","class","Modal","image","largeImageURL","tags","App","useState","setValue","setPage","setImages","setLoaded","modal","setModal","largeImage","setLargeImage","useEffect","window","scrollTo","top","document","documentElement","scrollHeight","behavior","e","target","sendRequest","color","height","width","timeout","find","Number","parentNode","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84f6ffda.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"https://pixabay.com/api/\";\nconst apiKey = \"23539275-fb90155ac37cf87d4395ca2a5\";\n\n\nexport default async function useRequest(value, page) {\n\n  const result = await axios\n    .get(\n      `${baseUrl}?q=${value}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then((response) => {\n      return ({ images: response.data.hits, loaded: true });\n    })\n  return result;\n};\n","import React from \"react\";\n\nfunction Searchbar({ onChange, onClick, value }) {\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\">\n        <button type=\"button\" className=\"SearchForm-button\" onClick={onClick}>\n          {\" \"}\n          Search\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autocomplete=\"off\"\n          autofocus\n          placeholder=\"Search images and photos\"\n          onChange={onChange}\n          value={value}\n        />\n      </form>\n    </header>\n  );\n}\n\nexport default Searchbar;\n","import React from \"react\";\n\nfunction ImageGalleryItem({ item, onClick }) {\n  return (\n    <li id={item.id}>\n      <img\n        src={item.webformatURL}\n        alt={item.id}\n        className=\"ImageGalleryItem-image\"\n        onClick={onClick}\n      />\n    </li>\n  );\n}\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\n\nfunction ImageGallery({ images, onClick }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((item) => {\n        return <ImageGalleryItem item={item} onClick={onClick} />;\n      })}\n    </ul>\n  );\n}\n\nexport default ImageGallery;\n","import React from \"react\";\n\nfunction Button({ onClick }) {\n  return (\n    <button type=\"button\" class=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\n\nfunction Modal({ image, onClick }) {\n  return (\n    <div className=\"Overlay\" onClick={onClick}>\n      <div className=\"Modal\">\n        <img src={image.largeImageURL} alt={image.tags} />\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import { useState, useEffect } from \"react\";\nimport sendRequest from \"./services/api\";\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\n\n\nexport default function App() {\n  const [value, setValue] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [loaded, setLoaded] = useState('');\n  const [modal, setModal] = useState(false);\n  const [largeImage, setLargeImage] = useState('');\n\n\n  function handleChange(e) {\n    setValue(e.target.value );\n  };\n\n  function searchImages(e) {\n    setImages([]);\n    setPage(2);\n    setLoaded(false);\n    sendRequest(value, page, images).then((data) => { setImages(data.images); setLoaded(data.loaded)});\n\n  };\n\n  function openLargeImage(e) {\n    setModal(true);\n    const largeImage = images.find((item) => item.id === Number(e.target.parentNode.id));\n    return setLargeImage(largeImage);\n  };\n\n  function loadMoreImages() {\n    setPage(page + 1);\n    sendRequest(value, page, images).then((data) => { setImages([...images, ...data.images]); setLoaded(data.loaded)});\n  };\n\n  \n  function  closeModal(e) {\n    if (e.target.className === \"Overlay\") {\n    setModal(false);\n    setLargeImage('');\n    };\n  };\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  });\n  \n    return (\n      <>\n        <Searchbar\n          onChange={handleChange}\n          onClick={searchImages}\n          value={value}\n        />\n        {loaded === false ? (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n            className=\"loader\"\n          />\n        ) : (\n          <ImageGallery images={images} onClick={openLargeImage} />\n        )}\n        ;{images.length && <Button onClick={loadMoreImages} />};\n        {modal && <Modal image={largeImage} onClick={closeModal} />}\n      </>\n    );\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}